//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceAlarm {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAlarm.IAlarmService")]
    public interface IAlarmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/UserExistsInDB", ReplyAction="http://tempuri.org/IAlarmService/UserExistsInDBResponse")]
        bool UserExistsInDB(Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/UserExistsInDB", ReplyAction="http://tempuri.org/IAlarmService/UserExistsInDBResponse")]
        System.Threading.Tasks.Task<bool> UserExistsInDBAsync(Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddUser", ReplyAction="http://tempuri.org/IAlarmService/AddUserResponse")]
        void AddUser(Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddUser", ReplyAction="http://tempuri.org/IAlarmService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        void AddAlarm(Models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/AddAlarm", ReplyAction="http://tempuri.org/IAlarmService/AddAlarmResponse")]
        System.Threading.Tasks.Task AddAlarmAsync(Models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/DeleteAlarm", ReplyAction="http://tempuri.org/IAlarmService/DeleteAlarmResponse")]
        void DeleteAlarm(Models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/DeleteAlarm", ReplyAction="http://tempuri.org/IAlarmService/DeleteAlarmResponse")]
        System.Threading.Tasks.Task DeleteAlarmAsync(Models.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetUser", ReplyAction="http://tempuri.org/IAlarmService/GetUserResponse")]
        Models.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetUser", ReplyAction="http://tempuri.org/IAlarmService/GetUserResponse")]
        System.Threading.Tasks.Task<Models.User> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsResponse")]
        Models.Alarm[] GetAlarms(Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAlarmService/GetAlarms", ReplyAction="http://tempuri.org/IAlarmService/GetAlarmsResponse")]
        System.Threading.Tasks.Task<Models.Alarm[]> GetAlarmsAsync(Models.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmServiceChannel : Client.ServiceAlarm.IAlarmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmServiceClient : System.ServiceModel.ClientBase<Client.ServiceAlarm.IAlarmService>, Client.ServiceAlarm.IAlarmService {
        
        public AlarmServiceClient() {
        }
        
        public AlarmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserExistsInDB(Models.User user) {
            return base.Channel.UserExistsInDB(user);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsInDBAsync(Models.User user) {
            return base.Channel.UserExistsInDBAsync(user);
        }
        
        public void AddUser(Models.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(Models.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void AddAlarm(Models.Alarm alarm) {
            base.Channel.AddAlarm(alarm);
        }
        
        public System.Threading.Tasks.Task AddAlarmAsync(Models.Alarm alarm) {
            return base.Channel.AddAlarmAsync(alarm);
        }
        
        public void DeleteAlarm(Models.Alarm alarm) {
            base.Channel.DeleteAlarm(alarm);
        }
        
        public System.Threading.Tasks.Task DeleteAlarmAsync(Models.Alarm alarm) {
            return base.Channel.DeleteAlarmAsync(alarm);
        }
        
        public Models.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<Models.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public Models.Alarm[] GetAlarms(Models.User user) {
            return base.Channel.GetAlarms(user);
        }
        
        public System.Threading.Tasks.Task<Models.Alarm[]> GetAlarmsAsync(Models.User user) {
            return base.Channel.GetAlarmsAsync(user);
        }
    }
}
